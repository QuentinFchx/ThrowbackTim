{"version":3,"file":"app.js","sources":["../src/Item.ts","../src/items/balls.ts","../src/items/bouncers.ts","../src/items/pipes.ts","../src/items/ramps.ts","../src/levels/level1.ts","../src/app.ts"],"sourcesContent":["const DEBUG_HITBOX = true;\n\nexport class Item {\n\tspriteMaterial: Phaser.Physics.P2.Material;\n\n\tconstructor(public tileSrc: string) {\n\t\tthis.spriteMaterial = game.physics.p2.createMaterial('spriteMaterial');\n\t}\n\n\tspawn(x: number, y: number): Phaser.Sprite {\n\t\tconst sprite = game.add.sprite(x, y, this.tileSrc);\n\t\tgame.physics.p2.enable(sprite, DEBUG_HITBOX);\n\t\tsprite.body.setMaterial(this.spriteMaterial);\n\t\treturn sprite;\n\t}\n}\n\nexport class Ball extends Item {\n\tconstructor(tileSrc: string, public bboxRadius: number) {\n\t\tsuper(tileSrc);\n\t}\n\n\tspawn(x: number, y: number): Phaser.Sprite {\n\t\tconst sprite = super.spawn(x, y);\n\t\tsprite.body.setCircle(this.bboxRadius);\n\t\treturn sprite;\n\t}\n}\n\nexport class StaticItem extends Item {\n\tconstructor(tileSrc: string) {\n\t\tsuper(tileSrc);\n\t}\n\n\tspawn(x: number, y: number): Phaser.Sprite {\n\t\tconst sprite = super.spawn(x, y);\n\t\tsprite.body.dynamic = false;\n\t\treturn sprite;\n\t}\n}\n","import {Ball} from \"../Item\";\n\nexport function getBalls(){\n\n\tconst Football = new Ball('ball_football', 32)\n\n\treturn {\n\t\tFootball\n\t}\n}","import { StaticItem } from '../Item';\n\nexport class Bouncer extends StaticItem {\n\tbounceFactor = 1.5;\n\n\tconstructor(tileSrc: string, public polygon: Array<Array<number>>) {\n\t\tsuper(tileSrc);\n\t}\n\n\tspawn(x: number, y: number): Phaser.Sprite {\n\t\tconst sprite = super.spawn(x, y);\n\t\tconst body: Phaser.Physics.P2.Body = sprite.body;\n\n\t\tbody.clearShapes();\n\t\tbody.addPolygon(null, this.polygon);\n\t\tbody.onBeginContact.add(onContact, this);\n\n\t\treturn sprite;\n\t}\n}\n\nfunction onContact(body, bodyB, shapeA, shapeB, equations: p2.ContactEquation[]) {\n\tconst contactEquation = equations[0];\n\tconst isTopSurface = contactEquation.contactPointA[0] === 0;\n\tif (isTopSurface) contactEquation.restitution = this.bounceFactor;\n}\n\nexport function getBouncers() {\n\tconst Bouncy = new Bouncer('bouncer', [[0, 0], [60, 0], [60, 20], [0, 20]]);\n\n\treturn {\n\t\tBouncy\n\t};\n}\n","import {StaticItem} from \"../Item\";\n\nexport class Pipe extends StaticItem {\n\tconstructor(tileSrc: string, public polygons: Array<Array<Array<number>>>){\n\t\tsuper(tileSrc);\n\t}\n\n\tspawn(x: number, y: number): Phaser.Sprite {\n\t\tconst sprite = super.spawn(x, y);\n\t\tconst body: Phaser.Physics.P2.Body = sprite.body;\n\n\t\tbody.clearShapes();\n\n\t\tthis.polygons.forEach(polygon => body.addPolygon(null, polygon))\n\t\t//body.data.position = [0,0];\n\t\tconsole.log(body);\n\t\treturn sprite;\n\t}\n}\n\nexport function getPipes(){\n\n\tconst MetalPipe1 = new Pipe('metal_pipe1', [\n\t\t[ [50,0], [50,40], [36,51], [1,50], [2,47], [36,48], [48,38], [49,2] ],\n\t\t[ [95,1], [95,44], [76,76], [39,95], [0,95], [0, 92], [39,92], [74,74], [92,44], [92,0] ],\n\t]);\n\n\treturn { MetalPipe1 }\n}","import {StaticItem} from \"../Item\";\n\nexport class Ramp extends StaticItem {\n\tconstructor(tileSrc: string, public polygon: Array<Array<number>>){\n\t\tsuper(tileSrc);\n\t}\n\n\tspawn(x: number, y: number): Phaser.Sprite {\n\t\tconst sprite = super.spawn(x, y);\n\t\tconst body: Phaser.Physics.P2.Body = sprite.body;\n\n\t\tbody.clearShapes();\n\t\tbody.addPolygon(null, this.polygon)\n\t\treturn sprite;\n\t}\n}\n\nexport function getRamps(){\n\n\tconst MetalRamp1 = new Ramp('metal_ramp1', [ [78,0], [96,18], [18,96], [0,76] ]);\n\tconst MetalRamp2 = new Ramp('metal_ramp2', [ [18,0], [96,77], [78, 96], [0,18] ]);\n\n\treturn { MetalRamp1, MetalRamp2 }\n}","import { Level } from '../Level';\n\nimport { getBalls } from '../items/balls';\nimport { getBouncers } from '../items/bouncers';\nimport { getPipes } from '../items/pipes';\nimport { getRamps } from '../items/ramps';\n\nexport class Level1 implements Level {\n\tinitialize() {\n\t\tconst { Football } = getBalls();\n\t\tconst { MetalRamp1, MetalRamp2 } = getRamps();\n\t\tconst { MetalPipe1 } = getPipes();\n\t\tconst { Bouncy } = getBouncers();\n\n\t\tFootball.spawn(430, 100);\n\t\tFootball.spawn(130, 80);\n\t\tFootball.spawn(630, 50);\n\t\tFootball.spawn(810, 50);\n\t\tFootball.spawn(1080, 40);\n\n\t\tgame.input.onTap.add((pointer: Phaser.Pointer) => {\n\t\t\tFootball.spawn(pointer.x, pointer.y);\n\t\t}, this);\n\n\t\tMetalRamp1.spawn(400, 200);\n\t\tMetalRamp2.spawn(700, 200);\n\n\t\tMetalPipe1.spawn(300, 250);\n\n\t\tBouncy.spawn(500, 500);\n\t}\n}\n","import { Level1 } from './levels/level1';\n\nconst game = new Phaser.Game(1280, 960, Phaser.AUTO, 'content', {\n\tpreload() {\n\t\tgame.load.image('logo', 'assets/phaser2.png');\n\t\tgame.load.image('metal_wall', 'assets/tiles/metal_wall.png');\n\n\t\tgame.load.image('ball_football', 'assets/sprites/ball_football.png');\n\t\tgame.load.image('metal_ramp1', 'assets/sprites/metal_ramp1.png');\n\t\tgame.load.image('metal_ramp2', 'assets/sprites/metal_ramp2.png');\n\t\tgame.load.image('metal_pipe1', 'assets/sprites/metal_pipe1.png');\n\n\t\tgame.load.tilemap('level1', 'assets/levels/level1.json', null, Phaser.Tilemap.TILED_JSON);\n\t},\n\tcreate() {\n\t\tconst logo = game.add.sprite(game.world.centerX, game.world.centerY, 'logo');\n\t\tlogo.anchor.setTo(0.5, 0.5);\n\n\t\tinitPhysics();\n\n\t\tconst map = game.add.tilemap('level1');\n\t\tmap.addTilesetImage('metal_wall');\n\t\tmap.setCollisionBetween(0, 7); // les tiles 0 à 7 gèrent les collisions\n\t\twindow.map = map;\n\n\t\t//  Creates a new blank layer and sets the map dimensions.\n\t\t//  In this case the map is 40x30 tiles in size and the tiles are 32x32 pixels in size.\n\t\t//const layer = map.create('level', 40, 30, 32, 32);\n\t\tconst layerWalls = map.createLayer('walls');\n\t\tlayerWalls.resizeWorld();\n\n\t\t//  Convert the tilemap layer into bodies. Only tiles that collide (see above) are created.\n\t\t//  This call returns an array of body objects which you can perform addition actions on if\n\t\t//  required. There is also a parameter to control optimising the map build.\n\t\tgame.physics.p2.convertTilemap(map, layerWalls);\n\n\t\t(new Level1()).initialize();\n\t},\n\tupdate() {\n\n\t},\n\trender() {\n\n\t}\n});\n\n\nfunction initPhysics() {\n\tgame.physics.startSystem(Phaser.Physics.P2JS);\n\tgame.physics.p2.gravity.y = 1000;\n\n\tconst worldMaterial = game.physics.p2.createMaterial('worldMaterial');\n\n\t//  4 trues = the 4 faces of the world in left, right, top, bottom order\n\tgame.physics.p2.setWorldMaterial(worldMaterial, true, true, true, true);\n\tgame.physics.p2.world.defaultMaterial = worldMaterial;\n\n\tObject.assign(game.physics.p2.world.defaultContactMaterial, {\n\t\tfriction: 1.5, // Friction to use in the contact of these two materials.\n\t\trestitution: 0.65, // Restitution (i.e. how bouncy it is!) to use in the contact of these two materials.\n\t\tstiffness: 1e7, // Stiffness of the resulting ContactEquation that this ContactMaterial generate.\n\t\trelaxation: 3, // Relaxation of the resulting ContactEquation that this ContactMaterial generate.\n\t\t// frictionStiffness: 1e7; // Stiffness of the resulting FrictionEquation that this ContactMaterial generate.\n\t\t// frictionRelaxation: 3; // Relaxation of the resulting FrictionEquation that this ContactMaterial generate.\n\t\t// surfaceVelocity: 0; // Will add surface velocity to this material. If bodyA rests on top if bodyB, and the surface velocity is positive, bodyA will slide to the right.\n\t});\n}\n\nwindow.game = game;\n"],"names":["game"],"mappings":"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"}
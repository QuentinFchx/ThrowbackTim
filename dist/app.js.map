{"version":3,"file":"app.js","sources":["../src/Item.ts","../src/app.ts"],"sourcesContent":["declare var game: Phaser.Game;\r\n\r\nexport class Item {\r\n\tpublic Sprite: Phaser.Sprite;\r\n\r\n\tconstructor(public tileSrc: string){\r\n\r\n\t}\r\n\r\n\tspawn(x: number, y: number): Phaser.Sprite {\r\n\t\treturn game.add.sprite(x, y, this.tileSrc)\r\n\t}\r\n}\r\n\r\nexport class DynamicItem extends Item {\r\n\r\n\tpublic spriteMaterial: Phaser.Physics.P2.Material;\r\n\r\n\tconstructor(tileSrc: string) {\r\n\t\tsuper(tileSrc);\r\n\t\tthis.spriteMaterial = game.physics.p2.createMaterial('spriteMaterial');\r\n\t}\r\n\r\n\tspawn(x: number, y: number): Phaser.Sprite {\r\n\t\tconst sprite = super.spawn(x, y);\r\n\t\tgame.physics.p2.enable(sprite);\r\n\t\tsprite.body.setMaterial(this.spriteMaterial);\r\n\t\treturn sprite;\r\n\t}\r\n}\r\n\r\nexport class Ball extends DynamicItem {\r\n\tconstructor(tileSrc: string, public bboxRadius: number){\r\n\t\tsuper(tileSrc);\r\n\t}\r\n\r\n\tspawn(x: number, y: number): Phaser.Sprite {\r\n\t\tconst sprite = super.spawn(x, y);\r\n\t\tsprite.body.setCircle(this.bboxRadius);\r\n\t\treturn sprite;\r\n\t}\r\n}","import {Ball} from \"./Item\";\r\n\r\nconst game = new Phaser.Game(1280, 960, Phaser.AUTO, 'content', {\r\n\tpreload(){\r\n\t\tgame.load.image('logo', 'assets/phaser2.png');\r\n\t\tgame.load.image('ball_football', 'assets/sprites/ball_football.png');\r\n\t\tgame.load.image('metal_wall', 'assets/tiles/metal_wall.png');\r\n\r\n\t\tgame.load.tilemap('level1', 'assets/levels/level1.json', null, Phaser.Tilemap.TILED_JSON);\r\n\t},\r\n\tcreate(){\r\n\t\tconst logo = game.add.sprite(game.world.centerX, game.world.centerY, 'logo');\r\n\t\tlogo.anchor.setTo(0.5, 0.5);\r\n\r\n\t\tinitPhysics();\r\n\r\n\t\tconst map = game.add.tilemap('level1');\r\n\t\tmap.addTilesetImage('metal_wall');\r\n\t\tmap.setCollisionBetween(0, 7); // les tiles 0 à 7 gèrent les collisions\r\n\t\twindow.map = map;\r\n\r\n\t\t//  Creates a new blank layer and sets the map dimensions.\r\n\t\t//  In this case the map is 40x30 tiles in size and the tiles are 32x32 pixels in size.\r\n\t\t//const layer = map.create('level', 40, 30, 32, 32);\r\n\t\tconst layerWalls = map.createLayer('walls');\r\n\t\tlayerWalls.resizeWorld();\r\n\r\n\t\t//  Convert the tilemap layer into bodies. Only tiles that collide (see above) are created.\r\n\t\t//  This call returns an array of body objects which you can perform addition actions on if\r\n\t\t//  required. There is also a parameter to control optimising the map build.\r\n\t\tgame.physics.p2.convertTilemap(map, layerWalls);\r\n\r\n\t\taddItems();\r\n\t},\r\n\tupdate(){\r\n\r\n\t},\r\n\trender(){\r\n\r\n\t}\r\n});\r\n\r\n\r\nfunction initPhysics(){\r\n\tgame.physics.startSystem(Phaser.Physics.P2JS);\r\n\tgame.physics.p2.gravity.y = 1000;\r\n\r\n\tconst worldMaterial = game.physics.p2.createMaterial('worldMaterial');\r\n\r\n\t//  4 trues = the 4 faces of the world in left, right, top, bottom order\r\n\tgame.physics.p2.setWorldMaterial(worldMaterial, true, true, true, true);\r\n\tgame.physics.p2.world.defaultMaterial = worldMaterial;\r\n\r\n\tObject.assign(game.physics.p2.world.defaultContactMaterial, {\r\n\t\tfriction: 1.5, // Friction to use in the contact of these two materials.\r\n\t\trestitution: 0.65, // Restitution (i.e. how bouncy it is!) to use in the contact of these two materials.\r\n\t\tstiffness: 1e7, // Stiffness of the resulting ContactEquation that this ContactMaterial generate.\r\n\t\trelaxation: 3, // Relaxation of the resulting ContactEquation that this ContactMaterial generate.\r\n\t\t// frictionStiffness: 1e7; // Stiffness of the resulting FrictionEquation that this ContactMaterial generate.\r\n\t\t// frictionRelaxation: 3; // Relaxation of the resulting FrictionEquation that this ContactMaterial generate.\r\n\t\t// surfaceVelocity: 0; // Will add surface velocity to this material. If bodyA rests on top if bodyB, and the surface velocity is positive, bodyA will slide to the right.\r\n\t});\r\n}\r\n\r\nfunction addItems(){\r\n\tconst Football = new Ball('ball_football', 32)\r\n\r\n\tFootball.spawn(430, 100)\r\n\tFootball.spawn(130, 80)\r\n\tFootball.spawn(630, 50)\r\n\tFootball.spawn(810, 50)\r\n\tFootball.spawn(1080, 40)\r\n}\r\n\r\nwindow.game = game;"],"names":["game"],"mappings":"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"}